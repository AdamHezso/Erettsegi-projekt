// Sequelize és adattípusok betöltése
const { Sequelize, DataTypes } = require('sequelize')

// Környezeti változók betöltése a .env fájlból
require('dotenv').config()

// Környezeti változók változókba mentése
const USERNAME = process.env.USER        // Adatbázis felhasználónév
const PASSWORD = process.env.PASS       // Adatbázis jelszó
const TABLE = process.env.TABLE         // Adatbázis neve
const HOST = process.env.HOST           // Adatbázis kiszolgáló címe

// Kapcsolat létrehozása a MySQL adatbázissal
let dbHandler
try {
    dbHandler = new Sequelize(
        TABLE,    // Adatbázis neve
        USERNAME, // Felhasználónév
        PASSWORD, // Jelszó
        {
            dialect: "mysql", // SQL dialektus (MySQL)
            host: HOST        // Kiszolgáló címe
        }
    )
} catch (error) {
    console.log(error) // Hiba naplózása, ha a kapcsolat sikertelen
}

// "alkatresz" nevű tábla definíciója az ORM-en keresztül
exports.alkatresz = dbHandler.define(
    "alkatresz", {
        "id": {
            type: DataTypes.INTEGER,
            allowNull: false,      // Nem lehet NULL
            primaryKey: true,      // Elsődleges kulcs
            autoIncrement: true    // Automatikusan növekvő érték
        },
        "nev": {
            type: DataTypes.STRING,
            allowNull: false       // Megadása kötelező
        },
        "ar": {
            type: DataTypes.INTEGER,
            allowNull: false       // Megadása kötelező
        },
        "raktarkeszlet": {
            type: DataTypes.INTEGER,
            allowNull: false       // Megadása kötelező
        }
    }
)

// "felhasznalo" nevű tábla definíciója
exports.felhasznalo = dbHandler.define(
    "felhasznalo", {
        "id": {
            type: DataTypes.INTEGER,
            allowNull: false,
            primaryKey: true,
            autoIncrement: true
        },
        "felnev": {
            type: DataTypes.STRING,
            allowNull: true // Opcionális mező (bár logikailag kötelező lehetne)
        },
        "jelszo": {
            type: DataTypes.STRING,
            allowNull: true // Opcionális mező (de szintén inkább kötelezőnek kéne lennie)
        }
    }
)
